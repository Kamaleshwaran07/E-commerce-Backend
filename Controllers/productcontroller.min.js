import Product from "../Models/productmodel.min.js";
import User from "../Models/usermodel.min.js";

const productController = {
  createProduct: async (req, res) => {
    const userId = req.userId;
    const {
      productName,
      productDescription,
      brandName,
      productPrice,
    // sellingPrice,
    productImage,
    discountPercentage,
    color,  
    category,
      
    } = req.body;
    console.log(productName);
    try {
      const user = await User.findById(userId);
      // console.log(user)
      if (!user) {
        return res.status(404).json({ message: "User doesn't exist" });
      }
      if (user.role !== "Admin") {
        return res.status(401).json({ message: "Unauthorized" });
      }
      const product = await new Product({
        productName,
        productDescription,
        brandName,
        category,
        productPrice,
        // sellingPrice,
        discountPercentage,
        color,
        productImage,  
        userId: userId,
      });
      console.log(product)
      await product.save();
      console.log("Product saved", product);
      res
        .status(200)
        .json({ message: "Product created successfully", product });
    } catch (error) {
      res
        .status(500)
        .json({ message: "Server Error in creating product", error });
    }
  },
  getAllProducts: async (req, res) => {
    // const userId = req.userId;

    try {
      const allProducts = await Product.find();
      res
        .status(200)
        .json({ message: "Successfully fetched the products", allProducts });
    } catch (error) {
      res
        .status(500)
        .json({ message: "Server Error in getting the products", error });
    }
  },
  editProductPrice: async (req, res) => {
    const userId = req.userId;
    const { productPrice, discountPercentage , productName, brandName, color, productDescription } = req.body;
    const {productId} = req.params;
    console.log(productId);
    
    try {
      const user = await User.findById(userId);

      if (!user) {
        return res.status(404).json({ message: "User doesn't exist" });
      }
      if (user.role !== "Admin") {
        return res.status(401).json({ message: "Unauthorized" });
      }
      const product = await Product.findById(productId);
      if (!product) {
        return res.status(404).json({ message: "Product doesn't exist" });
      }
      const productUpdate = await Product.findByIdAndUpdate(productId, {
        productPrice, discountPercentage, brandName, productDescription, productName, color
      });
      await productUpdate.save();
      res.status(200).json({ message: "Product updated successfully" });
    } catch (error) {
      res
        .status(500)
        .json({ message: "Server Error in editing product", error });
    }
  },
  deleteProduct: async (req, res) => {
    const userId = req.userId;
    const {productId} = req.params;
    console.log(productId)
    try {
      const user = await User.findById(userId);

      if (!user) {
        return res.status(404).json({ message: "User doesn't exist" });
      }
      if (user.role !== "Admin") {
        return res.status(401).json({ message: "Unauthorized" });
      }
      const product = await Product.findById(productId);
      console.log(product);
      
      if (!product) {
        return res.status(404).json({ message: "Product doesn't exist" });
      }
      const deleteProduct = await Product.findByIdAndDelete(productId);
      await deleteProduct.save();
      res
        .status(200)
        .json({ message: "Deleted the product successfully", deleteProduct });
    } catch (error) {
      res
        .status(500)
        .json({ message: "Server Error in deleting product", error });
    }
  },
  productCategory: async (req, res) => {

  
    try {
    const filterCategory = await Product.distinct("category");
    console.log("FilterCategory", filterCategory)
   
    const distinctCategory = []
    console.log("DistinctCategory", distinctCategory);
    
    for(const category of filterCategory){
      const productCategory = await Product.findOne({category})
      // console.log("Product Category", productCategory)
      if(productCategory){
        distinctCategory.push(productCategory)
      }
    }
    console.log("DistinctCatefory", distinctCategory)
    res.status(200).json({ message: "Successfully fetched the category", distinctCategory });
      
    } catch (error) {
      res.status(500).json({ message: "Server Error in getting category", error });
    }

  },
  getCategoryWiseProducts:async (req, res)=>{
    const {category} = req.params;
    console.log(category)
    try {
      const categoryProducts = await Product.find({category : category});
      console.log(categoryProducts);
      res.status(200).json({message: "Successfully fetched category wise products", categoryProducts});
  }
  catch(error){
    res.status(500).json({message: "Server Error in getting category wise products", error});
  }}
};
export default productController;
